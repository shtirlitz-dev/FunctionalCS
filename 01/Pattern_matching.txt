p.11

public int Giorni(int mese, bool bisestile) =>
	(mese, bisestile) switch
	{
		{ mese: 2, bisestile: true } => 29,
		{ mese: 2 } => 28,
		{ mese: 1 or 3 or 5 or 7 or 8 or 10 or 12 } => 31,
		_ => 30
	};



p. 39
Select with iterator (second parameter)
var formattedFilms = films.Select((x, i) => $"{i} - {x.Title}");


Ranges p.40
var a = Enumerable.Range(8, 5);
var s = string.Join(", ", a);
// s = "8, 9, 10, 11, 12"


Count down
var gridCoords = Enumerable.Repeat(5, 5).Select((x, i) => x - i)
.SelectMany(x => Enumerable.Repeat(5, 5)
.Select((y, i) => (x, y - i))
);


Aggregate (on more values) p.43

var (totalBudget, totalRevenue) = films.Aggregate(
	(Budget: 0.0M, Revenue: 0.0M),
	(runningTotals, x) => (
		runningTotals.Budget + x.Budget,
		runningTotals.Revenue + x.BoxOfficeRevenue
	)
);

